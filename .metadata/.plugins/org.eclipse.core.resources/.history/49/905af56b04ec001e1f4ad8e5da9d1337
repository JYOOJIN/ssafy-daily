package daily_0327;

import java.util.*;
import java.io.*;

public class BJ_7576_토마토 {
	
	public static int n,m;
	public static int[][] tom;
	public static boolean[][] visited;
	public static int[][] dir= {{-1,0},{0,1},{1,0},{0,-1}};

	public static void main(String[] args) throws IOException{
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer(br.readLine());
		
		m=Integer.parseInt(st.nextToken());
		n=Integer.parseInt(st.nextToken());
		
		tom=new int[n][m];
		visited=new int[n][m];
		
		for(int i=0;i<n;i++) {
			st=new StringTokenizer(br.readLine());
			for(int j=0;j<m;j++) {
				tom[i][j]=Integer.parseInt(st.nextToken());
			}
		}
		
		//처음부터 모든 토마토가 익어있는 경우
		if(check()==0) { 
			System.out.println(0);
			return;
		}
		
		int cnt=bfs(3,5);
		if(check()==0) {
			System.out.println(cnt);
		}else {
			System.out.println(-1);
		}
		
		
		
	}
	
	public static int check() {
		
		int flag=1;
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				flag*=tom[i][j];
			}
		}
		
		if(flag==0) return -1;
		else return 0; 
		
	}
	
	public static int bfs(int currentx,int currenty) {
		
		int cnt=0;
		
		Queue<int[]> q=new ArrayDeque<>();
		
		q.add(new int[] {currentx,currenty});
		visited[currentx][currenty]=true;
		
		while(!q.isEmpty()) {
			
			int[] tmp=q.poll();
			cnt++;
			
			for(int d=0;d<4;d++) {
				int dx=tmp[0]+dir[d][0];
				int dy=tmp[1]+dir[d][1];
				
				if(dx<0 || dx>=n || dy<0 || dy>=m) continue;
				
				if(tom[dx][dy]==0 && !visited[dx][dy]) {
					q.add(new int[] {dx,dy});
					visited[dx][dy]=true;
				}
				
			}
			
			
		}
		
		return cnt;
		
		
	}

}
