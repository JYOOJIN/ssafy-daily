package daily_0409;

import java.io.*;
import java.util.*;

public class BJ_19236_청소년상어 {
	
	static class Fish{
		int d,num; //좌표, 방향
		boolean isShark; //상어 유무
		boolean isLive; //생존 유무
		
		public Fish(int d, int num,boolean isShark,boolean isLive) {
			super();

			this.d = d;
			this.num=num;
			this.isShark = isShark;
			this.isLive=isLive;
		}
		
	}
	
	static class Order{
		int x,y,d;

		public Order(int x, int y,int d) {
			super();
			this.x = x;
			this.y = y;
			this.d=d;
		}
		
	}
	
	
	static int[][] dir= {{0,0},{-1,0},{-1,-1},{0,-1},{1,-1},{1,0},{1,1},{0,1},{-1,1}}; //상부터 반시계 방향(1~8)
	static Fish[][] fish;
	static Order[] order;
	static int sumFish=0; //상어가 먹을 수 있는 물고기 번호의 합의 최댓값
	static int N=4;
	
	public static void main(String[] args) throws Exception{
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		fish=new Fish[N][N];
		order=new Order[N*N];
		
		
		for(int i=0;i<4;i++) {
			st=new StringTokenizer(br.readLine());
			for(int j=0;j<4;j++) {
				int a=Integer.parseInt(st.nextToken()); //물고기의 번호
				int b=Integer.parseInt(st.nextToken()); //방향
				fish[i][j]=new Fish(b,a,false,true); //좌표+방향+번호+상어유무+생존유무
				order[a-1]=new Order(i,j,b); //0~15까지 순서에 따른 좌표 들어있음
			}
		}
				
		//상어가 (0,0)에 들어감
		fish[0][0].isShark=true;

		//물고기 이동
		
		
	}
	
	
	//물고기 이동
	public static void move() {
		
		for(int i=0;i<fish.length;i++) {
			
			int x=order[i].x;
			int y=order[i].y;
			for(int d=0;d<8;d++) {
				
				//이동할 좌표
				int dx=x+dir[order[i].d][0];
				int dy=y+dir[order[i].d][1];
				
				//배열 벗어낫거나 shark면 방향 바꾼다
				if(dx<0 || dx>=N || dy<0 || dy>= N || fish[dx][dy].isShark) {
					order[i].d=(order[i].d+1)%8;
					fish[order[i].x][order[i].y].d=(fish[order[i].x][order[i].y].d+1)%8;
				}
				
				//이동한 방향에 물고기 있다면
				if(fish[dx][dy].isLive) {
					int dNum=fish[dx][dy].num; //이동할 방향에 있는 num
					fish[dx][dy]=
					
				}else {
					fish[dx][dy].num=fish[x][y].num;
					fish[dx][dy].d=fish[x][y].d;
					fish[dx][dy].isLive=true;
				}
				
			} 
			
		}
		
		
	}

}











