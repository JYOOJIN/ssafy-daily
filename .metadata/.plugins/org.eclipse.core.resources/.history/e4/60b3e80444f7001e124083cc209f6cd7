package daily_0410;

import java.io.*;
import java.util.*;

public class BJ_17135_캐슬디펜스 {
	
	static class Point implements Comparable<Point>{
		int x,y,dis;
		boolean isLive;
		
		public Point(int x, int y, int dis, boolean isLive) {
			super();
			this.x = x;
			this.y = y;
			this.dis = dis;
			this.isLive = isLive;
		}

		@Override
		public int compareTo(Point o) {
			if(this.dis==o.dis) {
				return this.y-o.y; //거리 같으면 가장 왼쪽에 있는 적을 공격
				
			}else {
				return this.dis-o.dis; //거리 오름차순
			}
		}
		
		
	}
	
	static int n,m,d;
	static int[] arr; //궁수 조합 index 들어갈 배열
	static int[][] map;
	static PriorityQueue<Point> pq;

	public static void main(String[] args) throws Exception{
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer(br.readLine());
		
		n=Integer.parseInt(st.nextToken());
		m=Integer.parseInt(st.nextToken());
		d=Integer.parseInt(st.nextToken());
		
		map=new int[n+1][m];
		arr=new int[3];
		pq=new PriorityQueue<>();
		
		for(int i=0;i<n;i++) {
			st=new StringTokenizer(br.readLine());
			for(int j=0;j<m;j++) {
				map[i][j]=Integer.parseInt(st.nextToken());
				if(map[i][j]==1) pq.add(new Point(i,j,0,true)); //초기 dis는 0
			}
		}
		
		
		
		
		
	}

}
